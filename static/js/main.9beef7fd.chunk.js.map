{"version":3,"sources":["logo.svg","components/NavBar.js","components/EarthquakesPage.js","App.js","index.js"],"names":["NavBar","history","useHistory","useEffect","push","useState","active","setActive","handleClick","e","tempActive","currentTarget","id","background","activeIndex","backgroundColor","fontWeight","color","className","width","height","src","deleteIcon","alt","onClick","style","to","EarthquakesPage","App","path","Pinned","Glosary","Contact","props","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAAe,MAA0B,iC,qBCyE1BA,EAnEA,WAEX,IAAIC,EAAUC,cAGdC,qBAAU,WACNF,EAAQG,KAAK,OACd,CAACH,IAIJ,MAA4BI,mBAAS,EAAC,IAAtC,mBAAOC,EAAP,KAAeC,EAAf,KAOMC,EAAc,SAAAC,GAChB,IAAIC,EAAa,GACjBA,EAAWD,EAAEE,cAAcC,KAAM,EACjCL,EAAUG,IAGRG,EAAa,SAAAC,GAAW,OAC1BR,EAAOQ,GACH,CAAEC,gBAAiB,WACnB,CAAEA,gBAAiB,YAErBC,EAAa,SAAAF,GAAW,OAC1BR,EAAOQ,GACH,CAAEG,MAAO,WACT,CAAEA,MAAO,YAGjB,OACI,qBAAKC,UAAU,SAAf,SACI,+BACI,oBAAIA,UAAU,gBAAd,SACI,qBAAKA,UAAU,OAAOC,MAAM,KAAKC,OAAO,KAAKC,IAAKC,EAAYC,IAAI,eAEtE,oBAAIX,GAAG,IAAIY,QAAShB,EAAaiB,MAAOZ,EAAW,GAAnD,SACI,cAAC,IAAD,CAAMa,GAAG,IAAT,SACI,sBAAMD,MAAOT,EAAW,GAAxB,6BAGR,oBAAIJ,GAAG,IAAIY,QAAShB,EAAaiB,MAAOZ,EAAW,GAAnD,SACI,cAAC,IAAD,CAAMa,GAAG,UAAT,SACI,sBAAMD,MAAOT,EAAW,GAAxB,wBAGR,oBAAIJ,GAAG,IAAIY,QAAShB,EAAaiB,MAAOZ,EAAW,GAAnD,SACI,cAAC,IAAD,CAAMa,GAAG,WAAT,SACI,sBAAMD,MAAOT,EAAW,GAAxB,yBAGR,oBAAIJ,GAAG,IAAIY,QAAShB,EAAaiB,MAAOZ,EAAW,GAAnD,SACI,cAAC,IAAD,CAAMa,GAAG,WAAT,SACI,sBAAMD,MAAOT,EAAW,GAAxB,+BCxDTW,EARS,WACpB,OACI,qBAAKT,UAAU,kBAAf,0BC4EOU,EArEH,WA6CV,OACE,eAAC,IAAD,WAEE,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,UAAZ,SACE,cAACC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,WAAZ,SACE,cAACE,EAAD,MAEF,cAAC,IAAD,CAAOF,KAAK,WAAZ,SACE,cAACG,EAAD,MAEF,cAAC,IAAD,CAAOH,KAAK,IAAZ,SACE,cAAC,EAAD,aAUV,SAASC,EAAOG,GACd,OAAO,wCAGT,SAASF,EAAQE,GACf,OAAO,yCAGT,SAASD,EAAQC,GACf,OAAO,yCCpFTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9beef7fd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.65f56ea8.svg\";","import deleteIcon from '../logo.svg';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n\r\n    let history = useHistory();\r\n\r\n    // When Navigation Bar mounts, make the browser navigate to the home page\r\n    useEffect(() => {\r\n        history.push(\"/\");\r\n    }, [history]);\r\n\r\n    // State: Array that holds a boolean for each of the options on the Navigation Bar. That boolean\r\n    // is true if that option is active, false otherwise.\r\n    const [active, setActive] = useState([true]);\r\n\r\n    /**\r\n     * Activates (changes background and color) the clicked option by setting its value on the state \r\n     * to true\r\n     * @param {Event} e Event with information about the clicked object.\r\n     */\r\n    const handleClick = e => {\r\n        let tempActive = [];\r\n        tempActive[e.currentTarget.id] = true;\r\n        setActive(tempActive);\r\n    }\r\n\r\n    const background = activeIndex =>\r\n        active[activeIndex] ?\r\n            { backgroundColor: \"#3E2723\" } :  // Brown 900\r\n            { backgroundColor: \"#5D4037\" }    // Brown 700\r\n\r\n    const fontWeight = activeIndex =>\r\n        active[activeIndex] ?\r\n            { color: \"#FFF8E1\" } :           // Amber 50\r\n            { color: \"#FFD54F\" }             // Amber 300\r\n\r\n    // render() {\r\n    return (\r\n        <nav className=\"NavBar\">\r\n            <ul>\r\n                <li className=\"LogoContainer\">\r\n                    <img className=\"Logo\" width=\"40\" height=\"40\" src={deleteIcon} alt=\"App logo\" />\r\n                </li>\r\n                <li id=\"0\" onClick={handleClick} style={background(0)}>\r\n                    <Link to=\"/\">\r\n                        <span style={fontWeight(0)}>Earthquakes</span>\r\n                    </Link>\r\n                </li>\r\n                <li id=\"1\" onClick={handleClick} style={background(1)}>\r\n                    <Link to=\"/pinned\">\r\n                        <span style={fontWeight(1)}>Pinned</span>\r\n                    </Link>\r\n                </li>\r\n                <li id=\"2\" onClick={handleClick} style={background(2)}>\r\n                    <Link to=\"/glosary\">\r\n                        <span style={fontWeight(2)}>Glosary</span>\r\n                    </Link>\r\n                </li>\r\n                <li id=\"3\" onClick={handleClick} style={background(3)}>\r\n                    <Link to=\"/contact\">\r\n                        <span style={fontWeight(3)}>Contact</span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n\r\n}\r\n\r\nexport default NavBar;","const EarthquakesPage = () => {\r\n    return (\r\n        <div className=\"EarthquakesPage\">\r\n            Earthquakes\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EarthquakesPage;","import './App.css';\nimport NavBar from './components/NavBar';\nimport EarthquakesPage from './components/EarthquakesPage';\nimport {\n  HashRouter,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nconst App = () => {\n\n  /**\n * Asynchronous funtion that fetches data from the USGS Earthquakes API.\n * \n * @param {String} minMagnitude The minimum magnitude of the earthquakes to fetch.\n * @param {String} maxMagnitude The maximum magnitude of the earthquakes to fetch.\n * @returns A JSON object containing the list of earthquakes fetched, or null if an error occurs.\n */\n  // const fetchDataFromUsgs = async (minMagnitude, maxMagnitude) => {\n  //   let limit = 20000;\n  //   const alertErrorMessage = \"Error on the connection to the United States Geological Survey\";\n  //   const usgsEarthquakesApiEndpoint = \"https://earthquake.usgs.gov/fdsnws/event/1/query\";\n  //   const queryParameters =\n  //     `?format=geojson&limit=${limit}&minmagnitude=${minMagnitude}&maxmagnitude=${maxMagnitude}`\n  //     + \"&orderby=time\";\n  //   const fetchUrl = usgsEarthquakesApiEndpoint + queryParameters;\n  //   console.log(\"URL used to fetch data from USGS Earthquakes API:\\n\" + fetchUrl);\n\n  //   disableButton(true, document.getElementById(\"update-button\"));\n  //   document.getElementById(\"list-title\").innerHTML = \"Loading earthquakes list\";\n  //   document.getElementById(\"list-content\").innerHTML = \"\";\n  //   document.getElementById(\"details-content\").style.display = \"none\";\n  //   document.getElementById(\"map-content\").style.display = \"none\";\n  //   document.getElementById(\"details-container\").style.border = \"none\";\n\n  //   try {\n  //     const response = await fetch(fetchUrl);\n  //     if (response.ok) {\n  //       try {\n  //         const data = await response.json();\n  //         return data;\n  //       } catch (error) {\n  //         alert(alertErrorMessage);\n  //         return null;\n  //       }\n  //     } else {\n  //       throw new Error(`${response.status} (${response.statusText})`);\n  //     }\n  //   } catch (error) {\n  //     alert(alertErrorMessage);\n  //     return null;\n  //   }\n  // }\n\n  return (\n    <HashRouter>\n\n      <NavBar />\n\n      <Switch>\n        <Route path=\"/pinned\">\n          <Pinned />\n        </Route>\n        <Route path=\"/glosary\">\n          <Glosary />\n        </Route>\n        <Route path=\"/contact\">\n          <Contact />\n        </Route>\n        <Route path=\"/\">\n          <EarthquakesPage />\n        </Route>\n      </Switch>\n\n    </HashRouter>\n  );\n}\n\nexport default App;\n\nfunction Pinned(props) {\n  return <h2>Pinned</h2>;\n}\n\nfunction Glosary(props) {\n  return <h2>Glosary</h2>;\n}\n\nfunction Contact(props) {\n  return <h2>Contact</h2>;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}